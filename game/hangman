#!/bin/bash

wordlib="$HOME/scripts/game/long-words.txt"
empty="\."
games=0

if [ ! -r "$wordlib" ] ; then
	echo "$0: Missing word library $wordlib" >&2
	echo "(online: http://www.intuitive.com/wicked/examples/long-words.txt" >&2
	echo "save the file as $wordlib and you're ready to play!)" >&2
	exit 1
fi

while [ "$guess" != "quit" ] ; do
	match="$(randomquote $wordlib)"

	if [ $games -gt 0 ] ; then
		echo ""
		echo "*** New Game! ***"
	fi

	games="$(( $games + 1 ))"
	guessed="" ; guess="" ; bad=${1:-6}
	partial="$(echo $match | sed "s/[^$empty${guessed}]/-/g")"

	while [ "$guess" != "$match" -a "$guess" != "quit" ] ; do
	echo ""
    if [ ! -z "$guessed" ] ; then   
		/bin/echo -n "Guessed: $guessed, "
    fi
    echo "Steps from gallows: $bad, word so far: $partial"
 
    /bin/echo -n "Guess a letter: "
    read guess
    echo ""

    if [ "$guess" = "$match" ] ; then
		echo "You got it!"
    elif [ "$guess" = "quit" ] ; then   # Youâ€™re out? Ok.
		sleep 0           
    elif [ $(echo $guess | wc -c | sed 's/[^[:digit:]]//g') -ne 2 ] ; then
		echo "Uh oh: You can only guess a single letter at a time"
    elif [ ! -z "$(echo $guess | sed 's/[[:lower:]]//g')" ] ; then
		echo "Uh oh: Please only use lowercase letters for your guesses"
    elif [ -z "$(echo $guess | sed "s/[$empty$guessed]//g")" ] ; then
		echo "Uh oh: You have already tried $guess"
	elif [ "$(echo $match | sed "s/$guess/-/g")" != "$match" ] ; then
		guessed="$guessed$guess"
		partial="$(echo $match | sed "s/[^$empty${guessed}]/-/g")"
		if [ "$partial" = "$match" ] ; then
			echo "** You've been pardoned!! Well done!  The word was \"$match\"."
        	guess="$match" 
		else
        	echo "* Great! The letter \"$guess\" appears in the word!"
		fi
    	elif [ $bad -eq 1 ] ; then
      		echo "** Uh oh: you've run out of steps. You're on the platform... <SNAP!>"
      		echo "** The word you were trying to guess was \"$match\""
			guess="$match"
    	else
    		echo "* Nope, \"$guess\" does not appear in the word."
      		guessed="$guessed$guess"
      		bad=$(( $bad - 1 ))
    	fi
	done
done
exit 0
